name: Deploy .NET API to Windows EC2 with Zip & Unzip

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.x'

      - name: Restore
        run: dotnet restore Backend/PropertyManagementApi/PropertyManagementApi.sln

      - name: Build
        run: dotnet build Backend/PropertyManagementApi/PropertyManagementApi.sln --configuration Release --no-restore

      - name: Publish
        run: dotnet publish Backend/PropertyManagementApi/API/API.csproj --configuration Release --output ./publish --no-build

      # 1) Create a zip of the publish folder (on the GitHub runner)
      - name: Zip Published Files
        run: |
          zip -r publish.zip ./publish

      # 2) Copy the zip file to the Windows server
      - name: Copy Zip File to EC2
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          password: ${{ secrets.EC2_PASSWORD }}
          port: 22
          source: "publish.zip"
          # Use a Unix-style path so scp can write to the Windows drive.
          target: "/c/inetpub/wwwroot/PropertyManagementApi"

      # 3) SSH into Windows and unzip using PowerShell
      - name: Unzip on Windows EC2
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          password: ${{ secrets.EC2_PASSWORD }}
          port: 22
          # Expand-Archive overwrites existing files with -Force
          script: |
            powershell -Command "Expand-Archive -Path 'C:\\inetpub\\wwwroot\\PropertyManagementApi\\publish.zip' -DestinationPath 'C:\\inetpub\\wwwroot\\PropertyManagementApi' -Force"
      
      # 4) Restart IIS
      - name: Restart IIS Website
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          password: ${{ secrets.EC2_PASSWORD }}
          port: 22
          script: |
            powershell -Command "Import-Module WebAdministration; Stop-Website -Name 'PropertyManagementApi'; Start-Website -Name 'PropertyManagementApi'"
